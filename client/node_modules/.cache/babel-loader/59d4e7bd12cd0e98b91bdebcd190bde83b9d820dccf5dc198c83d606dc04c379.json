{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavilion\\\\Desktop\\\\ITSolutions\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from 'jwt-decode';\nimport { Alert, Typography } from \"@mui/material\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().required(\"Introduceți email\"),\n  password: Yup.string().required(\"Introduceți parola\")\n});\nexport const Login = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useAuth();\n  const [error, setError] = useState(false);\n  const [message, setMessage] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const redirect = searchParams.get('redirect');\n  useEffect(() => {\n    if (state.isAuthenticated) {\n      if (redirect) {\n        navigate('/' + redirect);\n      } else navigate(\"/\");\n    }\n  }, [state.isAuthenticated]);\n  const handleSubmit = async values => {\n    try {\n      setError(false);\n      setMessage(null);\n      const response = await fetch(\"http://localhost:8080/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(true);\n        setMessage(\"Error. \" + data.message);\n        alert(data.message);\n      }\n      localStorage.setItem('token', data.accessToken);\n      const decoded = jwtDecode(data.accessToken);\n      dispatch({\n        type: 'SET_ADMIN',\n        payload: decoded.isAdmin\n      });\n      dispatch({\n        type: 'SET_AUTHENTICATED',\n        payload: true\n      });\n      window.location.href = \"/\";\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => {\n      setError(false);\n      setMessage(null);\n    },\n    className: \"container mt-5 p-5 card shadow-lg bg-light\",\n    style: {\n      width: \"35vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Autentificare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: LoginSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"email\",\n            className: `form-control ${errors.email && touched.email ? \"is-invalid\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\",\n            className: \"invalid-feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Parol\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\",\n            className: `form-control ${errors.password && touched.password ? \"is-invalid\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\",\n            className: \"invalid-feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          style: {\n            backgroundColor: 'darkred',\n            width: '100%',\n            color: 'white'\n          },\n          className: \"my-2\",\n          children: \"Continu\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: error ? \"error\" : \"success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mt-3\",\n      children: [\"Nu ai cont?  \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"\\xCEnregistreaz\\u0103-te\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/resetare-parola-solicitare\",\n        children: \"Ai uitat parola?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"tvehc4Rc6xOitiLOEYMhqjEf/QI=\", false, function () {\n  return [useAuth, useLocation, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","Formik","Form","Field","ErrorMessage","Yup","Link","useLocation","useNavigate","jwtDecode","Alert","Typography","useAuth","Button","jsxDEV","_jsxDEV","LoginSchema","object","shape","email","string","required","password","Login","_s","state","dispatch","error","setError","message","setMessage","location","navigate","searchParams","URLSearchParams","search","redirect","get","isAuthenticated","handleSubmit","values","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","localStorage","setItem","accessToken","decoded","type","payload","isAdmin","window","href","console","onClick","className","style","width","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","errors","touched","htmlFor","name","component","backgroundColor","color","severity","to","_c","$RefreshReg$"],"sources":["C:/Users/Pavilion/Desktop/ITSolutions/client/src/pages/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from 'jwt-decode';\nimport { Alert, Typography } from \"@mui/material\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { Button } from \"react-bootstrap\";\n\nconst LoginSchema = Yup.object().shape({\n    email: Yup.string().required(\"Introduceți email\"),\n    password: Yup.string().required(\"Introduceți parola\"),\n});\n\nexport const Login = () => {\n    const { state, dispatch } = useAuth();\n    const [error, setError] = useState(false);\n    const [message, setMessage] = useState(null);\n    const location = useLocation();\n    const navigate = useNavigate();\n    const searchParams = new URLSearchParams(location.search);\n    const redirect = searchParams.get('redirect');\n\n    useEffect(() => {\n        if (state.isAuthenticated) {\n            if (redirect) {\n                navigate('/' + redirect)\n            } else\n                navigate(\"/\");\n        }\n    }, [state.isAuthenticated]);\n\n\n    const handleSubmit = async (values) => {\n        try {\n            setError(false);\n            setMessage(null);\n            const response = await fetch(\"http://localhost:8080/auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(values),\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                setError(true);\n                setMessage(\"Error. \" + data.message);\n                alert(data.message)\n            }\n            localStorage.setItem('token', data.accessToken);\n            const decoded = jwtDecode(data.accessToken);\n            dispatch({ type: 'SET_ADMIN', payload: decoded.isAdmin });\n            dispatch({ type: 'SET_AUTHENTICATED', payload: true });\n            window.location.href = \"/\";\n        } catch (error) {\n            console.error(\"Error logging in:\", error);\n        }\n    };\n\n    return (\n        <div onClick={() => {\n            setError(false);\n            setMessage(null);\n        }} className=\"container mt-5 p-5 card shadow-lg bg-light\" style={{width: \"35vw\"}}>\n            <h2 className=\"text-center\">Autentificare</h2>\n            <Formik\n                initialValues={{\n                    email: \"\",\n                    password: \"\",\n                }}\n                validationSchema={LoginSchema}\n                onSubmit={handleSubmit}\n            >\n                {({ errors, touched }) => (\n                    <Form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <Field\n                                type=\"text\"\n                                name=\"email\"\n                                className={`form-control ${errors.email && touched.email ? \"is-invalid\" : \"\"\n                                    }`}\n                            />\n                            <ErrorMessage\n                                name=\"email\"\n                                component=\"div\"\n                                className=\"invalid-feedback\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Parolă</label>\n                            <Field\n                                type=\"password\"\n                                name=\"password\"\n                                className={`form-control ${errors.password && touched.password ? \"is-invalid\" : \"\"\n                                    }`}\n                            />\n                            <ErrorMessage\n                                name=\"password\"\n                                component=\"div\"\n                                className=\"invalid-feedback\"\n                            />\n                        </div>\n\n                        <Button type=\"submit\"  style={{ backgroundColor: 'darkred', width: '100%', color: 'white'}}  className=\"my-2\">\n                            Continuă \n                        </Button>\n                        {message && <Alert severity={error ? \"error\" : \"success\"}>{message}</Alert>}\n                    </Form>\n                )}\n            </Formik>\n            <Typography className=\"mt-3\">Nu ai cont?  <Link to=\"/signup\">Înregistrează-te</Link></Typography>\n            <Typography className=\"mt-3\"><Link to=\"/resetare-parola-solicitare\">Ai uitat parola?</Link></Typography>\n        </div>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACjD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAGX,GAAG,CAACY,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACnCC,KAAK,EAAEd,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,mBAAmB,CAAC;EACjDC,QAAQ,EAAEjB,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,oBAAoB;AACxD,CAAC,CAAC;AAEF,OAAO,MAAME,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGd,OAAO,CAAC,CAAC;EACrC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM+B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAC9B,MAAMyB,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAC9B,MAAMyB,YAAY,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;EACzD,MAAMC,QAAQ,GAAGH,YAAY,CAACI,GAAG,CAAC,UAAU,CAAC;EAE7CtC,SAAS,CAAC,MAAM;IACZ,IAAI0B,KAAK,CAACa,eAAe,EAAE;MACvB,IAAIF,QAAQ,EAAE;QACVJ,QAAQ,CAAC,GAAG,GAAGI,QAAQ,CAAC;MAC5B,CAAC,MACGJ,QAAQ,CAAC,GAAG,CAAC;IACrB;EACJ,CAAC,EAAE,CAACP,KAAK,CAACa,eAAe,CAAC,CAAC;EAG3B,MAAMC,YAAY,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACAZ,QAAQ,CAAC,KAAK,CAAC;MACfE,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM;MAC/B,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QACdtB,QAAQ,CAAC,IAAI,CAAC;QACdE,UAAU,CAAC,SAAS,GAAGkB,IAAI,CAACnB,OAAO,CAAC;QACpCsB,KAAK,CAACH,IAAI,CAACnB,OAAO,CAAC;MACvB;MACAuB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACM,WAAW,CAAC;MAC/C,MAAMC,OAAO,GAAG9C,SAAS,CAACuC,IAAI,CAACM,WAAW,CAAC;MAC3C5B,QAAQ,CAAC;QAAE8B,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAEF,OAAO,CAACG;MAAQ,CAAC,CAAC;MACzDhC,QAAQ,CAAC;QAAE8B,IAAI,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MACtDE,MAAM,CAAC5B,QAAQ,CAAC6B,IAAI,GAAG,GAAG;IAC9B,CAAC,CAAC,OAAOjC,KAAK,EAAE;MACZkC,OAAO,CAAClC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC7C;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAK+C,OAAO,EAAEA,CAAA,KAAM;MAChBlC,QAAQ,CAAC,KAAK,CAAC;MACfE,UAAU,CAAC,IAAI,CAAC;IACpB,CAAE;IAACiC,SAAS,EAAC,4CAA4C;IAACC,KAAK,EAAE;MAACC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAC7EnD,OAAA;MAAIgD,SAAS,EAAC,aAAa;MAAAG,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CvD,OAAA,CAACd,MAAM;MACHsE,aAAa,EAAE;QACXpD,KAAK,EAAE,EAAE;QACTG,QAAQ,EAAE;MACd,CAAE;MACFkD,gBAAgB,EAAExD,WAAY;MAC9ByD,QAAQ,EAAElC,YAAa;MAAA2B,QAAA,EAEtBA,CAAC;QAAEQ,MAAM;QAAEC;MAAQ,CAAC,kBACjB5D,OAAA,CAACb,IAAI;QAAAgE,QAAA,gBACDnD,OAAA;UAAKgD,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACvBnD,OAAA;YAAO6D,OAAO,EAAC,OAAO;YAAAV,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpCvD,OAAA,CAACZ,KAAK;YACFqD,IAAI,EAAC,MAAM;YACXqB,IAAI,EAAC,OAAO;YACZd,SAAS,EAAE,gBAAgBW,MAAM,CAACvD,KAAK,IAAIwD,OAAO,CAACxD,KAAK,GAAG,YAAY,GAAG,EAAE;UACrE;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACFvD,OAAA,CAACX,YAAY;YACTyE,IAAI,EAAC,OAAO;YACZC,SAAS,EAAC,KAAK;YACff,SAAS,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENvD,OAAA;UAAKgD,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACvBnD,OAAA;YAAO6D,OAAO,EAAC,UAAU;YAAAV,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxCvD,OAAA,CAACZ,KAAK;YACFqD,IAAI,EAAC,UAAU;YACfqB,IAAI,EAAC,UAAU;YACfd,SAAS,EAAE,gBAAgBW,MAAM,CAACpD,QAAQ,IAAIqD,OAAO,CAACrD,QAAQ,GAAG,YAAY,GAAG,EAAE;UAC3E;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACFvD,OAAA,CAACX,YAAY;YACTyE,IAAI,EAAC,UAAU;YACfC,SAAS,EAAC,KAAK;YACff,SAAS,EAAC;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENvD,OAAA,CAACF,MAAM;UAAC2C,IAAI,EAAC,QAAQ;UAAEQ,KAAK,EAAE;YAAEe,eAAe,EAAE,SAAS;YAAEd,KAAK,EAAE,MAAM;YAAEe,KAAK,EAAE;UAAO,CAAE;UAAEjB,SAAS,EAAC,MAAM;UAAAG,QAAA,EAAC;QAE9G;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRzC,OAAO,iBAAId,OAAA,CAACL,KAAK;UAACuE,QAAQ,EAAEtD,KAAK,GAAG,OAAO,GAAG,SAAU;UAAAuC,QAAA,EAAErC;QAAO;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACTvD,OAAA,CAACJ,UAAU;MAACoD,SAAS,EAAC,MAAM;MAAAG,QAAA,GAAC,eAAa,eAAAnD,OAAA,CAACT,IAAI;QAAC4E,EAAE,EAAC,SAAS;QAAAhB,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACjGvD,OAAA,CAACJ,UAAU;MAACoD,SAAS,EAAC,MAAM;MAAAG,QAAA,eAACnD,OAAA,CAACT,IAAI;QAAC4E,EAAE,EAAC,6BAA6B;QAAAhB,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvG,CAAC;AAEd,CAAC;AAAC9C,EAAA,CAvGWD,KAAK;EAAA,QACcX,OAAO,EAGlBL,WAAW,EACXC,WAAW;AAAA;AAAA2E,EAAA,GALnB5D,KAAK;AAAA,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
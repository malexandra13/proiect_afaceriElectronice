{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavilion\\\\Desktop\\\\ITSolutions\\\\Constructions\\\\client\\\\src\\\\pages\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jwtDecode } from 'jwt-decode';\nimport Product from './Product'; // Importă componenta Product\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [refresh, setRefresh] = useState(false); // Adaugă un state pentru a gestiona actualizarea\n\n  useEffect(() => {\n    loadProducts();\n  }, [refresh]); // Reîncarcă produsele când 'refresh' se schimbă\n\n  const loadProducts = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:8080/products\");\n      setProducts(data);\n    } catch (error) {\n      console.error(\"Eroare la încărcarea produselor:\", error);\n    }\n  };\n  const handleDelete = () => {\n    setRefresh(!refresh); // Modifică 'refresh' pentru a reîncărca produsele\n  };\n  const isClientUser = isClient();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Produse disponibile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/product/${product.id}`,\n          className: \"btn btn-info\",\n          children: \"Vezi detalii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), isClientUser && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => addToCart(product.id),\n          children: \"Adaug\\u0103 \\xEEn co\\u0219\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), isAdmin() && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: handleDelete,\n          children: \"\\u0218terge produs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n// Funcția pentru a verifica dacă utilizatorul este un client\n_s(ProductList, \"MdHezfKEiA2nDyf7mfNyMUY972g=\");\n_c = ProductList;\nconst isClient = () => {\n  const token = localStorage.getItem(\"token\");\n  const decodedToken = jwtDecode(token);\n  return (decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.role) === \"user\"; // Verificăm dacă rolul este \"user\"\n};\n\n// Funcția pentru a verifica dacă utilizatorul este admin\nconst isAdmin = () => {\n  const token = localStorage.getItem(\"token\");\n  const decodedToken = jwtDecode(token);\n  return (decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.role) === \"admin\"; // Verificăm dacă rolul este \"admin\"\n};\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jwtDecode","Product","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","refresh","setRefresh","loadProducts","data","get","error","console","handleDelete","isClientUser","isClient","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","title","desc","to","id","onClick","addToCart","isAdmin","_c","token","localStorage","getItem","decodedToken","role","$RefreshReg$"],"sources":["C:/Users/Pavilion/Desktop/ITSolutions/Constructions/client/src/pages/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport Product from './Product'; // Importă componenta Product\r\n\r\nconst ProductList = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [refresh, setRefresh] = useState(false);  // Adaugă un state pentru a gestiona actualizarea\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, [refresh]); // Reîncarcă produsele când 'refresh' se schimbă\r\n\r\n    const loadProducts = async () => {\r\n        try {\r\n            const { data } = await axios.get(\"http://localhost:8080/products\");\r\n            setProducts(data);\r\n        } catch (error) {\r\n            console.error(\"Eroare la încărcarea produselor:\", error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        setRefresh(!refresh);  // Modifică 'refresh' pentru a reîncărca produsele\r\n    };\r\n\r\n    const isClientUser = isClient();\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Produse disponibile</h2>\r\n            <div className=\"list-group\">\r\n                {products.map((product) => (\r\n                    <div key={product.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        <div>\r\n                            <strong>{product.title}</strong>\r\n                            <p>{product.desc}</p>\r\n                        </div>\r\n                        {/* Link către pagina de detalii */}\r\n                        <Link to={`/product/${product.id}`} className=\"btn btn-info\">Vezi detalii</Link>\r\n\r\n                        {/* Afișăm butonul de adăugare în coș doar pentru clienți */}\r\n                        {isClientUser && (\r\n                            <button\r\n                                className=\"btn btn-success\"\r\n                                onClick={() => addToCart(product.id)}\r\n                            >\r\n                                Adaugă în coș\r\n                            </button>\r\n                        )}\r\n                        {/* Afișăm butonul de ștergere pentru admini */}\r\n                        {isAdmin() && (\r\n                            <button \r\n                                className=\"btn btn-danger\" \r\n                                onClick={handleDelete}\r\n                            >\r\n                                Șterge produs\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Funcția pentru a verifica dacă utilizatorul este un client\r\nconst isClient = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    return decodedToken?.role === \"user\"; // Verificăm dacă rolul este \"user\"\r\n};\r\n\r\n// Funcția pentru a verifica dacă utilizatorul este admin\r\nconst isAdmin = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    return decodedToken?.role === \"admin\"; // Verificăm dacă rolul este \"admin\"\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
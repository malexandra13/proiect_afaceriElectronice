{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavilion\\\\Desktop\\\\ITSolutions\\\\Constructions\\\\client\\\\src\\\\pages\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jwtDecode } from 'jwt-decode';\nimport Product from './Product'; // Importă componenta Product\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [refresh, setRefresh] = useState(false); // State pentru reîncărcarea produselor\n\n  useEffect(() => {\n    loadProducts();\n  }, [refresh]); // Reîncarcă produsele când 'refresh' se schimbă\n\n  const loadProducts = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:8080/products\");\n      setProducts(data);\n    } catch (error) {\n      console.error(\"Eroare la încărcarea produselor:\", error);\n    }\n  };\n\n  // Funcția care va fi transmisă către Product pentru a actualiza lista de produse\n  const retriggerRefresh = () => {\n    setRefresh(!refresh); // Modifică starea 'refresh' pentru a reîncărca produsele\n  };\n  const isClientUser = isClient();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Produse disponibile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product,\n        retriggerRefresh: retriggerRefresh // Transmite funcția ca prop\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n// Funcția pentru a verifica dacă utilizatorul este un client\n_s(ProductList, \"MdHezfKEiA2nDyf7mfNyMUY972g=\");\n_c = ProductList;\nconst isClient = () => {\n  const token = localStorage.getItem(\"token\");\n  const decodedToken = jwtDecode(token);\n  return (decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.role) === \"user\"; // Verificăm dacă rolul este \"user\"\n};\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jwtDecode","Product","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","refresh","setRefresh","loadProducts","data","get","error","console","retriggerRefresh","isClientUser","isClient","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","id","_c","token","localStorage","getItem","decodedToken","role","$RefreshReg$"],"sources":["C:/Users/Pavilion/Desktop/ITSolutions/Constructions/client/src/pages/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport Product from './Product'; // Importă componenta Product\r\n\r\nconst ProductList = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [refresh, setRefresh] = useState(false);  // State pentru reîncărcarea produselor\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, [refresh]); // Reîncarcă produsele când 'refresh' se schimbă\r\n\r\n    const loadProducts = async () => {\r\n        try {\r\n            const { data } = await axios.get(\"http://localhost:8080/products\");\r\n            setProducts(data);\r\n        } catch (error) {\r\n            console.error(\"Eroare la încărcarea produselor:\", error);\r\n        }\r\n    };\r\n\r\n    // Funcția care va fi transmisă către Product pentru a actualiza lista de produse\r\n    const retriggerRefresh = () => {\r\n        setRefresh(!refresh);  // Modifică starea 'refresh' pentru a reîncărca produsele\r\n    };\r\n\r\n    const isClientUser = isClient();\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Produse disponibile</h2>\r\n            <div className=\"list-group\">\r\n                {products.map((product) => (\r\n                    <Product\r\n                        key={product.id}\r\n                        product={product}\r\n                        retriggerRefresh={retriggerRefresh} // Transmite funcția ca prop\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Funcția pentru a verifica dacă utilizatorul este un client\r\nconst isClient = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const decodedToken = jwtDecode(token);\r\n    return decodedToken?.role === \"user\"; // Verificăm dacă rolul este \"user\"\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAEhDC,SAAS,CAAC,MAAM;IACZa,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gCAAgC,CAAC;MAClEL,WAAW,CAACI,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D;EACJ,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3BN,UAAU,CAAC,CAACD,OAAO,CAAC,CAAC,CAAE;EAC3B,CAAC;EAED,MAAMQ,YAAY,GAAGC,QAAQ,CAAC,CAAC;EAE/B,oBACId,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BhB,OAAA;MAAAgB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BpB,OAAA;MAAKe,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBb,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBAClBtB,OAAA,CAACF,OAAO;QAEJwB,OAAO,EAAEA,OAAQ;QACjBV,gBAAgB,EAAEA,gBAAiB,CAAC;MAAA,GAF/BU,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGlB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAlB,EAAA,CAxCMD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAyCjB,MAAMa,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,YAAY,GAAG/B,SAAS,CAAC4B,KAAK,CAAC;EACrC,OAAO,CAAAG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEC,IAAI,MAAK,MAAM,CAAC,CAAC;AAC1C,CAAC;AAED,eAAe5B,WAAW;AAAC,IAAAuB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}